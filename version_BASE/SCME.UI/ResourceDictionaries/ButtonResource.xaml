<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ResourceDictionaries/CommonResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Thickness          x:Key="ButtonMargin"               >2</Thickness>
    <Thickness          x:Key="ButtonPressedMargin"        >5</Thickness>
    <Thickness          x:Key="ButtonMainMargin"           >5</Thickness>
    <Thickness          x:Key="ButtonPressedMainMargin"    >10</Thickness>
    <DropShadowEffect   x:Key="Effect" ShadowDepth="0" Direction="330" Color="White" Opacity="0.8" BlurRadius="4"/>


    <Style x:Key="CButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{StaticResource xBlue1}"/>
        <Setter Property="Foreground" Value="{StaticResource xWhite1}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding"  Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            UseLayoutRounding="True"
                            >
                        <TextBlock Name="label" 
                                   SnapsToDevicePixels="True"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Background="Transparent" 
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="ExtraLight"
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="CToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{StaticResource xPurple1}"/>
        <Setter Property="Foreground" Value="{StaticResource xWhite1}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding"  Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            UseLayoutRounding="True" CornerRadius="2"
                            >
                        <TextBlock Name="label" 
                                   SnapsToDevicePixels="True"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Background="Transparent" 
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="ExtraLight"
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Шаблон элемента управления для кнопки -->
    <Style x:Key="CButtonMenuPathStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BlueBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBackground}"/>
        <Setter Property="Opacity" Value="{StaticResource DefaultOpacity}"/>
        <Setter Property="Margin" Value="{StaticResource ButtonMargin}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="border"  Background="Transparent" Margin="{TemplateBinding Margin}">
                        <Border CornerRadius="3" BorderThickness="0" 
                                BorderBrush="{StaticResource BlackBackground}"
                                Background="{TemplateBinding Background}"
                                Effect="{StaticResource ShadowEffectBlack}">
                            <Path Margin="{TemplateBinding Padding}" Stretch="Uniform" StrokeThickness="{StaticResource PathThickness}"
                                  Stroke="{TemplateBinding Foreground}"  
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Margin">
                                        <ThicknessAnimation To="{StaticResource ButtonPressedMargin}" Duration="0:0:0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Margin">
                                        <ThicknessAnimation To="{StaticResource ButtonMargin}" Duration="0:0:0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation To="{StaticResource DisableOpacity}" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation To="{StaticResource DefaultOpacity}" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>