<Page x:Class="SCME.UI.PagesUser.ProfileSelectionPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ui="clr-namespace:SCME.UI"
      xmlns:res="clr-namespace:SCME.UI.Properties"
      xmlns:customControl="clr-namespace:SCME.UI.CustomControl"
      mc:Ignorable="d"
      d:DesignWidth="1280" d:DesignHeight="924"
      Name="MyUserPage" Title="{x:Static res:Resources.UserPage_Title}">

    <Page.Resources>

        <ui:ListBoxSelectedItemToVisibleConverter x:Key="LBSI2V" />
        <ui:IsGreaterThanConverter x:Key="GreaterThan" />

        <Style x:Key="PlaceholderTextBox" TargetType="{x:Type customControl:ValidatingTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type customControl:ValidatingTextBox}">
                        <Grid>
                            <customControl:ValidatingTextBox
                                Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                x:Name="textSource"
                                Background="Transparent"
                                Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}"
                                     Panel.ZIndex="1" Padding="10, 10, 10, 0" FontSize="45" FontStyle="Italic">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, ElementName=textSource}" Value="">
                                                <Setter Property="Foreground" Value="LightGray" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsFocused, ElementName=textSource}" Value="True">
                                                <Setter Property="Foreground" Value="Transparent" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource CLabelStyle}">
            <Setter Property="Foreground" Value="{StaticResource xWhite1}" />
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CButtonStyle}" />

        <Style TargetType="{x:Type Path}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Data" Value="M 0 1.5 L 1.5 3 L 3 0" />
            <Setter Property="StrokeThickness" Value="1.5" />
            <Setter Property="Stroke" Value="{StaticResource xWhite1}" />
            <Setter Property="Stretch" Value="Uniform" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                    <Setter Property="Data" Value="M 0 0 L 3 3 M 0 3 L 3 0"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="{StaticResource xWhite1}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize24}" />
            <Setter Property="BorderThickness" Value="1.5" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Name="border" Grid.Column="0" Margin="{TemplateBinding Padding}"
                                    Width="{Binding ElementName=border, Path=ActualHeight}"
                                    BorderBrush="{TemplateBinding Foreground}"
                                    Background="Transparent" CornerRadius="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <Path Name="checkMark" Stretch="Fill" SnapsToDevicePixels="True" Margin="2"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="{TemplateBinding BorderThickness}"
                                      Data="M 0 1.5 L 1.5 3 L 3 0" />
                            </Border>
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              TextBlock.FontFamily="{StaticResource DefaultFontFamily}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"
                                              Margin="{TemplateBinding Padding}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="checkMark" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="checkMark" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="checkMark" Property="Margin" Value="3" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="customControl:ListBoxProfiles">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Property="SelectedIndex" Value="-1" />
                        <Condition
                            Binding="{Binding Path=Items.Count, Converter={StaticResource GreaterThan}, ConverterParameter=0}"
                            Value="True">
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="SelectedIndex" Value="0" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="33*" />
            <ColumnDefinition Width="66*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*" />
            <RowDefinition Height="40*" />
            <RowDefinition Height="40*" />
            <RowDefinition Height="10*" />
        </Grid.RowDefinitions>

        <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="4"
                Background="{StaticResource xPurple1}"
                Margin="0,0,0,0" />
        <customControl:ValidatingTextBox Grid.Row="0" Grid.Column="0" IsNumeric="False" IsFloat="False" Text="" x:Name="FilterTextBox" TextChanged="FilterTextBox_OnTextChanged" Style="{StaticResource PlaceholderTextBox}" Tag="Поиск"></customControl:ValidatingTextBox>

        <customControl:ListBoxProfiles x:Name="profilesList" SelectionChanged="ProfilesList_OnSelectionChanged"
                                Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"
                                Margin="0,0,0,0"
                                IsEditable="False" />

        <Label Grid.Column="1" Grid.Row="0"
               Content="{Binding SelectedItem.Name, ElementName=profilesList}"
               FontSize="36" Margin="50,0,0,0" />

        <StackPanel Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Visibility="{Binding SelectedIndex, Converter={StaticResource LBSI2V}, ElementName=profilesList}">
            <Border x:Name="borderCommutation"
                    BorderBrush="{StaticResource xWhite1}"
                    BorderThickness="1"
                    Margin="50,30,75,15" Padding="5">
                <Grid Margin="0, 0, 20, 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280*" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="30*" />
                        <ColumnDefinition Width="150*" />
                        <ColumnDefinition Width="100*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" FontSize="30" Margin="10, 10, 0, 10"
                           Content="{x:Static res:Resources.CommutationTypeT}" Height="Auto" />
                    <Label Grid.Column="1" Grid.Row="0" Margin="10, 10, 0, 10" Height="Auto" HorizontalContentAlignment="Right"
                           Content="{Binding SelectedItem.ParametersComm, ElementName=profilesList}" />

                    <Label Grid.Column="3" Grid.Row="0" FontSize="30" Margin="10, 10, 0, 10"
                           Content="{x:Static res:Resources.Force}" Height="Auto" />
                    <Label Grid.Column="4" Grid.Row="0" Margin="10, 10, 0, 10" Height="Auto" HorizontalContentAlignment="Right"
                           Content="{Binding SelectedItem.ParametersClamp, ElementName=profilesList}" />
                    <Label Grid.Column="0" Grid.Row="1" FontSize="30" Margin="10, 10, 0, 10"
                           Content="{x:Static res:Resources.Height_Prof}" Height="Auto" />
                    <Label Grid.Column="1" Grid.Row="1" Margin="10, 10, 0, 10" Height="Auto" HorizontalContentAlignment="Right"
                           Content="{Binding SelectedItem.Height, ElementName=profilesList}" />
                    <Label Grid.Column="3" Grid.Row="1" FontSize="30" Margin="10, 10, 0, 10"
                           Content="{x:Static res:Resources.Temp}" Height="Auto" />
                    <Label Grid.Column="4" Grid.Row="1" Margin="10, 10, 0, 10" Height="Auto" HorizontalContentAlignment="Right"
                           Content="{Binding SelectedItem.Temperature, ElementName=profilesList}" />

                </Grid>
                
            </Border>
            <customControl:ListViewTestParametersSelection Margin="50,10,15,10"  IsButtonDeleteVisible="False"
                x:Name="TestParameters" ItemsSource="{Binding SelectedItem.TestParametersAndNormatives, ElementName=profilesList}" MaxHeight="500"/>
            <Border x:Name="borderHeight" BorderBrush="{StaticResource xWhite1}"
                    BorderThickness="1" Background="{StaticResource xPurple2}"
                    Margin="50,0,75,10" >
                <Grid Margin="15">
                    <Label HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30"
        			Margin="60,7,0,0" Content="{x:Static res:Resources.MeasureDialog_Title}" />

                    <CheckBox Margin="0" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top"
        			IsChecked="{Binding SelectedItem.IsHeightMeasureEnabled, ElementName=profilesList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Border>
        </StackPanel>

        <Grid Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="btnResults" x:FieldModifier="private"
                    Grid.Column="2"
                    Content="{x:Static res:Resources.Results}"
                    Click="Results_Click"
                    Margin="0, 0, 1, 0" />
            <Button x:Name="btnGoNext" x:FieldModifier="private"
                    Grid.Column="3"
                    Content="{x:Static res:Resources.Next}"
                    Click="Next_Click"
                    Margin="1, 0, 0, 0" />
        </Grid>

    </Grid>
</Page>