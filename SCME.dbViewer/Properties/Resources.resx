<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AverageCurrent" xml:space="preserve">
    <value>ITAV</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Subject num</value>
  </data>
  <data name="Constructive" xml:space="preserve">
    <value>Constructive</value>
  </data>
  <data name="DeleteAllFilters" xml:space="preserve">
    <value>Delete all filters</value>
  </data>
  <data name="DeviceClass" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="DeviceType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="DevID" xml:space="preserve">
    <value>Device identificator</value>
  </data>
  <data name="FromDate" xml:space="preserve">
    <value>From date</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="MainWindowTitle" xml:space="preserve">
    <value>Work with the data collected by means of MME hardware in the central database</value>
  </data>
  <data name="MmeCode" xml:space="preserve">
    <value>Code MME</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>No data</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ProfileID" xml:space="preserve">
    <value>Profile identificator</value>
  </data>
  <data name="ProfileName" xml:space="preserve">
    <value>Profile name</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="RecordsShown" xml:space="preserve">
    <value>Records shown: </value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="ReportCannotBeGenerated" xml:space="preserve">
    <value>The source data for building a report is empty. Report generation does not make sense.</value>
  </data>
  <data name="SiOmnity" xml:space="preserve">
    <value>Omnity</value>
  </data>
  <data name="SiType" xml:space="preserve">
    <value>Si</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ToDate" xml:space="preserve">
    <value>To date</value>
  </data>
  <data name="Ts" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Usr" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="CodeOfNonMatch" xml:space="preserve">
    <value>Code of non match</value>
  </data>
  <data name="LoadDataFromDataBaseFault" xml:space="preserve">
    <value>Error loading data from database</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Begin" xml:space="preserve">
    <value>To begin</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>To close</value>
  </data>
  <data name="Session" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="BitCalculator" xml:space="preserve">
    <value>Manage user permissions</value>
  </data>
  <data name="SetAdministrator" xml:space="preserve">
    <value>Set user as admin</value>
  </data>
  <data name="SelectDCUser" xml:space="preserve">
    <value>Select DC user</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle name</value>
  </data>
  <data name="Authenticate" xml:space="preserve">
    <value>Authenticate</value>
  </data>
  <data name="UserCredentials" xml:space="preserve">
    <value>User credentials</value>
  </data>
  <data name="SetUserPermissions" xml:space="preserve">
    <value>Set user permissions</value>
  </data>
  <data name="BuildAssemblyProtocol" xml:space="preserve">
    <value>Build assembly protocol</value>
  </data>
  <data name="ChangeDeviceStatus" xml:space="preserve">
    <value>Change device status</value>
  </data>
  <data name="ReadCreateComment" xml:space="preserve">
    <value>Read and create comment</value>
  </data>
  <data name="CreateParameter" xml:space="preserve">
    <value>Create parameter</value>
  </data>
  <data name="DropAssemblyProtocol" xml:space="preserve">
    <value>Drop of the assembly protocol</value>
  </data>
  <data name="EditParameter" xml:space="preserve">
    <value>Edit parameter</value>
  </data>
  <data name="ReadingComments" xml:space="preserve">
    <value>Reading comments</value>
  </data>
  <data name="RepositioningTheDevice" xml:space="preserve">
    <value>Repositioning the device</value>
  </data>
  <data name="SelectDevices" xml:space="preserve">
    <value>Select devices</value>
  </data>
  <data name="DeletePermissionsOfUser" xml:space="preserve">
    <value>Delete permissions of user</value>
  </data>
  <data name="UserSelected" xml:space="preserve">
    <value>User selected</value>
  </data>
  <data name="ManageBySelfPermissions" xml:space="preserve">
    <value>Manage by self permissions</value>
  </data>
  <data name="ManagePermissionsOfUser" xml:space="preserve">
    <value>Manage permissions of user</value>
  </data>
  <data name="DeviceComments" xml:space="preserve">
    <value>Device comments</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="CommentToAdd" xml:space="preserve">
    <value>Сomment to add</value>
  </data>
  <data name="RecordDate" xml:space="preserve">
    <value>Record date</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="DescrEN" xml:space="preserve">
    <value>Description in english</value>
  </data>
  <data name="DescrRU" xml:space="preserve">
    <value>Description in russian</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TemperatureCondition" xml:space="preserve">
    <value>Condition of Temperature</value>
  </data>
  <data name="Um" xml:space="preserve">
    <value>Um</value>
  </data>
  <data name="WorkWithManualInputParams" xml:space="preserve">
    <value>Work with manually entered parameters</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ManualInputParams" xml:space="preserve">
    <value>Manually entered parameters</value>
  </data>
  <data name="WorkWithComments" xml:space="preserve">
    <value>Work with comments</value>
  </data>
  <data name="ManualInputParamEditor" xml:space="preserve">
    <value>Manual input param editor</value>
  </data>
  <data name="DataWillNotBeSaved" xml:space="preserve">
    <value>Data will not be saved.</value>
  </data>
  <data name="ParameterNameNotDefined" xml:space="preserve">
    <value>Parameter name not defined.</value>
  </data>
  <data name="UnitMeasureIsNotDefined" xml:space="preserve">
    <value>Unit measure is not defined.</value>
  </data>
  <data name="NoEditingObjectSelected" xml:space="preserve">
    <value>No editing object selected.</value>
  </data>
  <data name="ObjectForDeleteNotSelected" xml:space="preserve">
    <value>Object for delete not selected.</value>
  </data>
  <data name="ConfirmationMessForDeleteManualInputParam" xml:space="preserve">
    <value>Parameter '{0}' and all its saved values ​​will be permanently deleted. Proceed?</value>
  </data>
  <data name="WorkWithValueOfManualInputParam" xml:space="preserve">
    <value>Work with value of manually entered parameter</value>
  </data>
  <data name="ValueOfManuallyEnteredParam" xml:space="preserve">
    <value>Value of manually entered parameter</value>
  </data>
  <data name="EditValueOfManuallyEnteredParameter" xml:space="preserve">
    <value>Edit value of manually entered parameter</value>
  </data>
  <data name="Parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="SelectedParameterIsNotEditable" xml:space="preserve">
    <value>The selected parameter '{0}' is not editable. The value of this parameter can be obtained by measuring on equipment.</value>
  </data>
  <data name="DeleteParameter" xml:space="preserve">
    <value>Delete parameter</value>
  </data>
  <data name="DeleteValueOfManuallyEnteredParameter" xml:space="preserve">
    <value>Delete value of manually entered parameter</value>
  </data>
  <data name="CreateValueOfManuallyEnteredParameter" xml:space="preserve">
    <value>Create value of manually entered parameter</value>
  </data>
  <data name="SelectedParameterIsNotDeletable" xml:space="preserve">
    <value>The selected parameter '{0}' is not deletable.</value>
  </data>
  <data name="PasswordIncorrect" xml:space="preserve">
    <value>The password is incorrect</value>
  </data>
  <data name="PasswordIsIncorrect" xml:space="preserve">
    <value>The password is incorrect or the DC user '{0}' does not exist</value>
  </data>
  <data name="UserIisNotAnApplicationUser" xml:space="preserve">
    <value>User '{0}' is not an application user '{1}'</value>
  </data>
</root>