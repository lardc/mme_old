<ListView x:Class="SCME.ProfileBuilder.CustomControl.ListBoxTestParameters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:res="clr-namespace:SCME.ProfileBuilder.Properties"
             xmlns:ui="clr-namespace:SCME.ProfileBuilder" 
             xmlns:customControl="clr-namespace:SCME.ProfileBuilder.CustomControl"
             xmlns:gateParameters="clr-namespace:SCME.Types.Gate;assembly=SCME.Types" 
             xmlns:bvtParameters="clr-namespace:SCME.Types.BVT;assembly=SCME.Types" 
             xmlns:vtmParameters="clr-namespace:SCME.Types.SL;assembly=SCME.Types"
             xmlns:dVdt="clr-namespace:SCME.Types.dVdt;assembly=SCME.Types"
             Background="{StaticResource xWhite1}" HorizontalAlignment="Stretch" x:Name="lbTestParams" >
    <ListView.Resources>

        <ui:BooleanToVisibilityConverter x:Key="B2V" />
        <ui:GridLengthConverter x:Key="G2L" />
        <ui:VtmTestTypeToVisibilityConverter x:Key="VT2V" />
        <ui:VtmTestTypeToStringConverter x:Key="VT2S" />
        <ui:BvtTestTypeToVisibilityConverter x:Key="TT2V" />
        <ui:dVdtTypeToStringConverter x:Key="DT2S"/>
        <ui:DvdtTestTypeToVisibilityConverter x:Key="DT2V"/>
        <ui:DvdtTestTypeToVisibilityUnConverter x:Key="DT2VB" />
        <ui:MeasureModeToVisibilityConverter x:Key="MM2V" />
        <ui:BvtTypeToStringConverter x:Key="BT2S" />
        <ui:FrequencyDivisorToFrequency x:Key="FD2F" />
        <ui:TDcFallRateValueFromEnum x:Key="TDcFallRateVFE" />
        <ui:TOsvRateValueFromEnum x:Key="TOsvRateVFE" />

        <GridLength x:Key="ListBoxScrollWidth">50</GridLength>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Red" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" CornerRadius="2" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListItemGrid" TargetType="Grid">
            <Setter Property="Background" Value="{StaticResource xPurple2}"></Setter>
        </Style>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid Name="border">
                            <Border Background="{StaticResource xBlack1}" Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Width}" CornerRadius="2">
                                <Path Name="path" Stretch="Uniform" Margin="5"
                                      Stroke="{StaticResource xWhite1}" StrokeThickness="6"
                                      Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource xPurple1}" />
                                <Setter TargetName="path" Property="Margin" Value="12" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="White" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Margin="1,0,1,0" />

                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Background="White"
                                       Opacity="0.66"
                                       HorizontalAlignment="Right"
                                       OverridesDefaultStyle="True"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                <ScrollBar.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{StaticResource ListBoxScrollWidth}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand"
                                                          Content="M 0 1 L 1 0 L 2 1"
                                                          Margin="0,0,0,1" Style="{StaticResource ScrollBarLineButton}"
                                                          Height="{Binding Source={StaticResource ListBoxScrollWidth}, Converter={StaticResource G2L}}"
                                                          Visibility="Visible" />
                                            <Track Grid.Row="1" Name="PART_Track" IsDirectionReversed="true">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                                  Command="ScrollBar.PageUpCommand" />
                                                </Track.DecreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Background="{StaticResource xBlack1}"
                                                           Style="{StaticResource ScrollBarThumb}" />
                                                </Track.Thumb>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                                  Command="ScrollBar.PageDownCommand" />
                                                </Track.IncreaseRepeatButton>
                                            </Track>
                                            <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand"
                                                          Content="M 0 0 L 1 1 L 2 0"
                                                          Margin="0,1,0,0" Style="{StaticResource ScrollBarLineButton}"
                                                          Height="{Binding Source={StaticResource ListBoxScrollWidth}, Converter={StaticResource G2L}}"
                                                          Visibility="Visible" />
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollBar.Template>
                            </ScrollBar>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource CLabelStyleNoDisable}">
            <Setter Property="Foreground" Value="{StaticResource xWhite1}" />
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="LightGreen" />
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="{TemplateBinding Margin}"
                              Background="{TemplateBinding Background}"
                              ClipToBounds="True">
                            <Path Margin="{TemplateBinding Padding}"
                                  Stretch="Uniform"
                                  StrokeThickness="8"
                                  Stroke="{TemplateBinding Foreground}"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Padding" Value="6" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Path}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Data" Value="M 0 1.5 L 1.5 3 L 3 0" />
            <Setter Property="StrokeThickness" Value="1.5" />
            <Setter Property="Stroke" Value="{StaticResource xWhite1}" />
            <Setter Property="Stretch" Value="Uniform" />
        </Style>

        <Style x:Key="SpcButton" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource xWhite1}" />
            <Setter Property="OpacityMask" Value="White" />
            <Setter Property="Opacity" Value="{StaticResource DefaultOpacity}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="{StaticResource xWhite1}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter Name="content" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <customControl:MyDataTemplateDictionary x:Key="MyDataTemplateDictionary">
            <DataTemplate  DataType="gateParameters:TestParameters" x:Key="GateParametersTemplate">
                <Grid Visibility="Visible" Margin="0,10,70,10" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"></ColumnDefinition>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Style="{StaticResource ListItemGrid}">
                        <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                        <Label  HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30"
                                  Margin="10" Padding="2" Content="Gate" />
                        <Button x:Name="btnGate" CommandParameter="1" Style="{StaticResource SpcButton}" IsEnabled="False"
                                Margin="120,0,20,0">

                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45*" />
                                    <ColumnDefinition Width="10*" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="45*" />
                                    <ColumnDefinition Width="10*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,0" Visibility="{Binding IsCurrentEnabled, Converter={StaticResource B2V}}"
                                       Content="{x:Static res:Resources.PureVgt}" />
                                <Path Grid.Column="1" Grid.Row="0"  Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding IsCurrentEnabled, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right" />

                                <!--IsEnabled="{}" Width="60"-->
                                <Label Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.HoldingCurrent}" Visibility="{Binding IsIhEnabled, Converter={StaticResource B2V}}" />
                                <Path Grid.Column="4" Grid.Row="0" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding IsIhEnabled, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right" />

                                <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,0" Visibility="{Binding IsIhStrikeCurrentEnabled, Converter={StaticResource B2V}}"
                                       Content="{x:Static res:Resources.HoldingStrikeCurrent}" />
                                <Path Grid.Column="1" Grid.Row="1" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding IsIhStrikeCurrentEnabled, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right" />

                                <Label Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,0" Visibility="{Binding IsIlEnabled, Converter={StaticResource B2V}}"
                                       Content="{x:Static res:Resources.LatchingCurrent}" />
                                <Path Grid.Column="4" Grid.Row="1" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding IsIlEnabled, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right"  />
                                <Label Grid.Column="0" Grid.Row="2" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.MaxResistance_Ohm}" />
                                <Label Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right"
                                       Content="{Binding Resistance}" />

                                <Label Grid.Column="0" Grid.Row="3" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.MaxIgt_mA}" />
                                <Label Grid.Column="1" Grid.Row="3" HorizontalAlignment="Right"
                                       Content="{Binding IGT }" />

                                <Label Grid.Column="3" Grid.Row="3" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.MaxVgt_V}" />
                                <Label Grid.Column="4" Grid.Row="3" HorizontalAlignment="Right"
                                       Content="{Binding VGT }" />

                                <Label Grid.Column="0" Grid.Row="4" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.MaxIh_mA}" />
                                <Label Grid.Column="1" Grid.Row="4" HorizontalAlignment="Right"
                                       Content="{Binding IH }" />

                                <Label Grid.Column="3" Grid.Row="4" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.MaxIl_mA}" />
                                <Label Grid.Column="4" Grid.Row="4" HorizontalAlignment="Right"
                                       Content="{Binding IL}" />


                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"
                            />
                    </Grid>
                </Grid>
            </DataTemplate>
            
            <DataTemplate  DataType="bvtParameters:TestParameters" x:Key="BvtParametersTemplate">
                <Grid Visibility="Visible"
                         Margin="0,10,70,10" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"></ColumnDefinition>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Style="{StaticResource ListItemGrid}">
                        <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                        <Label x:Name="cbBvtIsEnabled" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30"
                                  Margin="10" Padding="2" Content="BVT" />


                        <Button x:Name="btnBvt" Grid.Row="0" CommandParameter="3"  IsEnabled="False"
                                Style="{StaticResource SpcButton}"
                                Margin="120,0,20,0">
                            <Grid  Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45*" />
                                    <ColumnDefinition Width="10*" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="45*" />
                                    <ColumnDefinition Width="10*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.TestType}" />
                                <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Right"
                                       Content="{Binding TestType, Converter={StaticResource BT2S},  UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="3" Grid.Row="0" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.CurrentLimit_mA}" />
                                <Label Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right"
                                       Content="{Binding CurrentLimit }" />

                                <Label Grid.Column="0" Grid.Row="1" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.VoltageLimitD_V}"
                                       Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                <Label Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right"
                                       Content="{Binding VoltageLimitD }"
                                       Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="3" Grid.Row="1" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.VoltageLimitR_V}"
                                       Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                <Label Grid.Column="4" Grid.Row="1" HorizontalAlignment="Right"
                                       Content="{Binding VoltageLimitR}"
                                       Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="2" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.PlateTime_ms}" />
                                <Label Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right"
                                       Content="{Binding PlateTime}" />

                                <Label Grid.Column="3" Grid.Row="2" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.Rampup_Vms}" />
                                <Label Grid.Column="4" Grid.Row="2" HorizontalAlignment="Right"
                                       Content="{Binding RampUpVoltage}" />

                                <Label Grid.Column="0" Grid.Row="3" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.StartVoltage_V}" />
                                <Label Grid.Column="1" Grid.Row="3" HorizontalAlignment="Right"
                                       Content="{Binding StartVoltage}" />

                                <Label Grid.Column="3" Grid.Row="3" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.Frequency_Hz}" />
                                <Label Grid.Column="4" Grid.Row="3" HorizontalAlignment="Right"
                                       Content="{Binding VoltageFrequency}" />

                                <Label Grid.Column="0" Grid.Row="4" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.FreqRate_Hz}" />
                                <Label Grid.Column="1" Grid.Row="4" HorizontalAlignment="Right"
                                       Content="{Binding FrequencyDivisor, Converter={StaticResource FD2F}}" />

                                <Label Grid.Column="3" Grid.Row="4" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.Mode}" />
                                <Label Grid.Column="4" Grid.Row="4" HorizontalAlignment="Right"
                                       Content="{Binding MeasurementMode}" />

                                <Label Grid.Column="0" Grid.Row="5" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.UseUdsmUrsm}" />
                                <Path Grid.Column="1" Grid.Row="5" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60"  
                                      Stretch="Uniform" HorizontalAlignment="Right"
                                      Visibility="{Binding UseUdsmUrsm, Converter={StaticResource B2V}}"/>                                                                

                                <Grid Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="5"
                                      Visibility="{Binding MeasurementMode, ConverterParameter=1, Converter={StaticResource MM2V}, UpdateSourceTrigger=PropertyChanged}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45*" />
                                        <ColumnDefinition Width="10*" />
                                        <ColumnDefinition Width="60" />
                                        <ColumnDefinition Width="45*" />
                                        <ColumnDefinition Width="10*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.MinVdrm_V}"
                                           Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                                           Content="{Binding VDRM}"
                                           Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label Grid.Column="3" Grid.Row="0" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.MinVrrm_V}"
                                           Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right"
                                           Content="{Binding VRRM}"
                                           Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>

                                <Grid Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="5"
                                      Visibility="{Binding MeasurementMode, ConverterParameter=0, Converter={StaticResource MM2V}, UpdateSourceTrigger=PropertyChanged}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35*" />
                                        <ColumnDefinition Width="10*" />
                                        <ColumnDefinition Width="100" />
                                        <ColumnDefinition Width="35*" />
                                        <ColumnDefinition Width="10*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.MaxIdrm_mA}"
                                           Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                                           Content="{Binding IDRM, ElementName=profilesList}"
                                           Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label Grid.Column="3" Grid.Row="0" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.MaxIrrm_mA}"
                                           Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right"
                                           Content="{Binding IRRM, ElementName=profilesList}"
                                           Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource TT2V}, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>

                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"
                            />
                    </Grid>
                </Grid>
            </DataTemplate>
            
            <DataTemplate  DataType="vtmParameters:TestParameters" x:Key="VtmParametersTemplate">
                <Grid Visibility="Visible" Margin="0,10,70,10">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="93*"></ColumnDefinition>
                            <ColumnDefinition Width="7*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid Style="{StaticResource ListItemGrid}">
                            <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                            <Label x:Name="cbVtmIsEnabled" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30"
                                  Margin="10" Padding="2" Content="VTM" />
                            <Button x:Name="btnVtm" CommandParameter="2"
                                Style="{StaticResource SpcButton}"  IsEnabled="False"
                                Margin="120,0,20,0">
                                <Grid  Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45*" />
                                        <ColumnDefinition Width="10*" />
                                        <ColumnDefinition Width="50" />
                                        <ColumnDefinition Width="45*" />
                                        <ColumnDefinition Width="10*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.Type}" />
                                    <Label Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Left"
                                       Content="{Binding TestType, Converter={StaticResource VT2S}, UpdateSourceTrigger=PropertyChanged}" />

                                    <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                      Visibility="{Binding TestType, ConverterParameter=0, Converter={StaticResource VT2V}, UpdateSourceTrigger=PropertyChanged}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="45*" />
                                            <ColumnDefinition Width="10*" />
                                            <ColumnDefinition Width="50" />
                                            <ColumnDefinition Width="45*" />
                                            <ColumnDefinition Width="10*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                          Content="{x:Static res:Resources.Current_A}" />
                                        <Label Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                                           Content="{Binding RampCurrent}" />

                                        <Label Grid.Column="3" Grid.Row="0" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.Time_us}" />
                                        <Label Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right"
                                           Content="{Binding RampTime}" />

                                        <Label Grid.Column="0" Grid.Row="1" Margin="0,0,0,0"  Visibility="{Binding IsRampOpeningEnabled, Converter={StaticResource B2V}}"
                                           Content="{x:Static res:Resources.IsHeatEnabled}" />
                                        <Path Grid.Column="1" Grid.Row="1" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding IsRampOpeningEnabled, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right" />

                                        <Label Grid.Column="0" Grid.Row="2" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.HeatCurrent_A}"
                                           Visibility="{Binding IsRampOpeningEnabled, Converter={StaticResource B2V} }" />
                                        <Label Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right"
                                           Content="{Binding RampOpeningCurrent }"
                                           Visibility="{Binding IsRampOpeningEnabled, Converter={StaticResource B2V} }" />

                                        <Label Grid.Column="3" Grid.Row="2" Margin="0,0,0,0"
                                           Content="{x:Static res:Resources.HeatTime_us}"
                                           Visibility="{Binding IsRampOpeningEnabled, Converter={StaticResource B2V} }" />
                                        <Label Grid.Column="4" Grid.Row="2" HorizontalAlignment="Right"
                                           Content="{Binding RampOpeningTime }"
                                           Visibility="{Binding IsRampOpeningEnabled, Converter={StaticResource B2V} }" />
                                    </Grid>

                                    <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="5" Grid.RowSpan="1"
                                      Visibility="{Binding TestType, ConverterParameter=1, Converter={StaticResource VT2V}, UpdateSourceTrigger=PropertyChanged}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="45*" />
                                                <ColumnDefinition Width="10*" />
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="45*" />
                                                <ColumnDefinition Width="10*" />
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                               Content="{x:Static res:Resources.Current_A}" />
                                            <Label Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                                               Content="{Binding SinusCurrent}" />

                                            <Label Grid.Column="3" Grid.Row="0" Margin="0,0,0,0"
                                               Content="{x:Static res:Resources.Time_us}" />
                                            <Label Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right"
                                               Content="{Binding SinusTime }" />
                                        </Grid>
                                    </Grid>

                                    <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="5" Grid.RowSpan="2"
                                      Visibility="{Binding TestType, ConverterParameter=2, Converter={StaticResource VT2V}, UpdateSourceTrigger=PropertyChanged}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="45*" />
                                                <ColumnDefinition Width="10*" />
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="45*" />
                                                <ColumnDefinition Width="10*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                               Content="{x:Static res:Resources.Current_A}" />
                                            <Label Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                                               Content="{Binding CurveCurrent }" />

                                            <Label Grid.Column="3" Grid.Row="0" Margin="0,0,0,0"
                                               Content="{x:Static res:Resources.Time_us}" />
                                            <Label Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right"
                                               Content="{Binding CurveTime }" />

                                            <Label Grid.Column="0" Grid.Row="1" Margin="0,0,0,0"
                                               Content="{x:Static res:Resources.CurveFactor}" />
                                            <Label Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right"
                                               Content="{Binding CurveFactor }" />

                                            <Label Grid.Column="3" Grid.Row="1" Margin="0,0,0,0"
                                               Content="{x:Static res:Resources.AdditionalTime_us}" />
                                            <Label Grid.Column="4" Grid.Row="1" HorizontalAlignment="Right"
                                               Content="{Binding CurveAddTime }" />

                                        </Grid>
                                        
                                    </Grid>

                                    <Label Grid.Column="0" Grid.Row="4" Margin="0,0,0,0" Visibility="{Binding UseFullScale, Converter={StaticResource B2V}}"
                                       Content="{x:Static res:Resources.UseFullScale}" />
                                    <Path Grid.Column="1" Grid.Row="4" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding UseFullScale, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right"  />

                                    <Label Grid.Column="3" Grid.Row="4" Margin="0,0,0,0" Visibility="{Binding UseLsqMethod, Converter={StaticResource B2V}}"
                                       Content="{x:Static res:Resources.UseLsqMethod}" />
                                    <Path Grid.Column="4" Grid.Row="4" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding UseLsqMethod, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform"  HorizontalAlignment="Right"  />

                                    <Label Grid.Column="0" Grid.Row="5" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.Count}" />
                                    <Label Grid.Column="1" Grid.Row="5" HorizontalAlignment="Right"
                                       Content="{Binding Count }" />

                                    <Label Grid.Column="3" Grid.Row="5" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.MaxVtm_V}"/>
                                    <Label Grid.Column="4" Grid.Row="5" HorizontalAlignment="Right"
                                       Content="{Binding VTM }" />

                                </Grid>
                            </Button>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"
                            />
                        </Grid>
                    </Grid>
                </Grid>
            </DataTemplate>
            
            <DataTemplate DataType="dVdt:TestParameters" x:Key="dVdtParametersTemplate">
                <Grid Visibility="Visible" Margin="0,10,70,10" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"></ColumnDefinition>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Style="{StaticResource ListItemGrid}">
                        <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                        <Label  HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30"
                                  Margin="10" Padding="2" Content="dVdt" />
                        <Button x:Name="btnDvdt" CommandParameter="4" Style="{StaticResource SpcButton}" IsEnabled="False"
                                Margin="120,0,20,0">

                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="14*" />
                                    <ColumnDefinition Width="34*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                
                                <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                                       Content="{x:Static res:Resources.Mode}" />
                                <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Right"
                                       Content="{Binding Mode, Converter={StaticResource DT2S},  UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="1" Margin="0,0,0,0" 
                                               Content="{x:Static res:Resources.DvDtVoltage}" />
                                <Label Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right"
                                               Content="{Binding Voltage }" />

                                <Label Grid.Column="0" Grid.Row="2" Margin="0,0,0,0" 
                                       Visibility="{Binding Mode, Converter={StaticResource DT2V}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Content="{x:Static res:Resources.DvdtVoltageRate}" />
                                <Label Grid.Column="2" Grid.Row="2" HorizontalAlignment="Right"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2V}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Content="{Binding VoltageRate }" />

                                <Label Grid.Column="0" Grid.Row="3" Margin="0,0,0,0"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2V}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Content="{x:Static res:Resources.DvdtConfirmationCount}" />
                                <Label Grid.Column="2" Grid.Row="3" HorizontalAlignment="Right"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2V}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Content="{Binding ConfirmationCount }" />

                                <Label Grid.Column="0" Grid.Row="4" Margin="0,0,0,0"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2VB}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Content="{x:Static res:Resources.DvdtVoltageRateOffSet}" />
                                <Label Grid.Column="2" Grid.Row="4" HorizontalAlignment="Right"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2VB}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Content="{Binding VoltageRateOffSet }" />

                                <Label Grid.Column="0" Grid.Row="5" Margin="0,0,0,0"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2VB}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Content="{x:Static res:Resources.DvdtVoltageRateLimit}" />
                                <Label Grid.Column="2" Grid.Row="5" HorizontalAlignment="Right"
                                       Visibility="{Binding Mode, Converter={StaticResource DT2VB}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Content="{Binding VoltageRateLimit }" />
                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"
                            />
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="atu:TestParameters" x:Key="atuParametersTemplate">
                <Grid Visibility="Visible" Margin="0,10,70,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Style="{StaticResource ListItemGrid}">
                        <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                        <Label  HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30" Margin="10" Padding="2" Content="ATU" />
                        <Button x:Name="btnAtu" CommandParameter="5" Style="{StaticResource SpcButton}" IsEnabled="False" Margin="120,0,20,0">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="84*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="14*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0" Content="{x:Static res:Resources.AtuPrePulseValue}" />
                                <Label Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Grid.ColumnSpan="2" Content="{Binding PrePulseValue}" />

                                <Label Grid.Column="0" Grid.Row="1" Margin="0,0,0,0" Content="{x:Static res:Resources.AtuPowerValueSet}" />
                                <Label Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" Grid.ColumnSpan="2" Content="{Binding PowerValue}" />
                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"/>
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="qrrtq:TestParameters" x:Key="QrrTqParametersTemplate">
                <Grid Visibility="Visible" Margin="0,10,70,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Style="{StaticResource ListItemGrid}">
                        <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                        <Label  HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30" Margin="10" Padding="2" Content="QrrTq" />
                        <Button x:Name="btnQrrTq" CommandParameter="6" Style="{StaticResource SpcButton}" IsEnabled="False" Margin="120,0,20,0">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="84*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="14*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqMode}" />
                                <Label Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Content="{Binding Mode, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="1" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqTrrMeasureBy9050Method}" Visibility="{Binding TrrMeasureBy9050Method, Converter={StaticResource B2V}}"/>
                                <Path Grid.Column="2" Grid.Row="1" Margin="6" Data="M 0 1.5 L 1.5 3 L 3 0" StrokeThickness="1.5" 
                                      Stroke="{StaticResource xWhite1}" Width="60" Visibility="{Binding TrrMeasureBy9050Method, Converter={StaticResource B2V}}" 
                                      Stretch="Uniform" HorizontalAlignment="Right"  />

                                <Label Grid.Column="0" Grid.Row="2" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqDirectCurrent}" />
                                <Label Grid.Column="2" Grid.Row="2" HorizontalAlignment="Right" Content="{Binding DirectCurrent, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="3" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqDCPulseWidth}" />
                                <Label Grid.Column="2" Grid.Row="3" HorizontalAlignment="Right" Content="{Binding DCPulseWidth, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="4" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqDCRiseRate}" />
                                <Label Grid.Column="2" Grid.Row="4" HorizontalAlignment="Right" Content="{Binding DCRiseRate, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="5" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqDCFallRate}" />
                                <Label Grid.Column="2" Grid.Row="5" HorizontalAlignment="Right" Content="{Binding DCFallRate, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TDcFallRateVFE}}" />

                                <Label Grid.Column="0" Grid.Row="6" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqOffStateVoltage}" />
                                <Label Grid.Column="2" Grid.Row="6" HorizontalAlignment="Right" Content="{Binding OffStateVoltage, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Column="0" Grid.Row="7" Margin="0,0,0,0" Content="{x:Static res:Resources.QrrTqOsvRate}" />
                                <Label Grid.Column="2" Grid.Row="7" HorizontalAlignment="Right" Content="{Binding OsvRate, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TOsvRateVFE}}" />
                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"/>
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="rac:TestParameters" x:Key="racParametersTemplate">
                <Grid Visibility="Visible" Margin="0,10,70,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Style="{StaticResource ListItemGrid}">
                        <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1" />
                        <Label  HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30" Margin="10" Padding="2" Content="R A-C" />
                        <Button x:Name="btnRac" CommandParameter="7" Style="{StaticResource SpcButton}" IsEnabled="False" Margin="120,0,20,0">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="84*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="14*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Margin="0,0,0,0" Content="{x:Static res:Resources.RACResVoltage}" />
                                <Label Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Content="{Binding ResVoltage, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Button Name="button" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=IsButtonDeleteVisible, Converter={StaticResource B2V}}"
                            Background="White" Foreground="{StaticResource xPurple1}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                            Content="{StaticResource ClosePath}" Click="Button_OnClick"/>
                    </Grid>
                </Grid>
            </DataTemplate>

        </customControl:MyDataTemplateDictionary>
    </ListView.Resources>

    <ListView.Style>
        <Style TargetType="ListView">

            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            </Style.Resources>

        </Style>
    </ListView.Style>

    <ListView.ItemContainerStyle>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />

            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            </Style.Resources>

        </Style>
    </ListView.ItemContainerStyle>
    <ListView.ItemTemplateSelector>
        <customControl:TemplateSelectorExt TemplateDictionary="{StaticResource MyDataTemplateDictionary}"></customControl:TemplateSelectorExt>
    </ListView.ItemTemplateSelector>
    <ListView.Template>
        <ControlTemplate TargetType="{x:Type ListView}">
            <ScrollViewer Focusable="False"
                              Padding="{TemplateBinding Padding}"
                              Background="{TemplateBinding Background}"
                              Style="{StaticResource ScrollViewerStyle}">
                <ItemsPresenter IsEnabled="{Binding IsParent, ElementName=lbTestParams}" />
            </ScrollViewer>
        </ControlTemplate>
    </ListView.Template>
</ListView>
