<ListView x:Class="SCME.dbViewer.CustomControl.ListViewFilters"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:customControl="clr-namespace:SCME.dbViewer.CustomControl"    
        xmlns:forFilters="clr-namespace:SCME.dbViewer.ForFilters">

    <ListView.Resources>
        <Style x:Key="delFilterPath" TargetType="Path">
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Data" Value="M 0 0 L 20 20 M 0 20 L 20 0"/>
            <Setter Property="StrokeThickness" Value="2"/>
            <Setter Property="Stroke" Value="Red"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        
        <customControl:FilterDataTemplateDictionary x:Key="filterDataTemplateDictionary">
            <DataTemplate DataType="forFilters:FilterDescription" x:Key="stringFilterTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btDeleteSelectedFilter" Grid.Column="0" Height="27" Width="{Binding ElementName=btDeleteSelectedFilter, Path=ActualHeight}"
                            Click="btDeleteSelectedFilter_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>
                    <Label Grid.Column="1" Content="{Binding Path=tittlefieldName}"/>
                    <ComboBox Grid.Column="2" IsReadOnly="True" IsEditable="True" Text="{Binding Path=comparison, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem Content="="/>
                        <ComboBoxItem Content="&lt;"/>
                        <ComboBoxItem Content=">"/>
                        <ComboBoxItem Content="&lt;="/>
                        <ComboBoxItem Content=">="/>
                    </ComboBox>
                    <TextBox Grid.Column="3" FontSize="14" Text="{Binding Path=value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="forFilters:FilterDescription" x:Key="dateFilterTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btDeleteSelectedFilter" Grid.Column="0" Height="auto" Width="{Binding ElementName=btDeleteSelectedFilter, Path=ActualHeight}"
                            Click="btDeleteSelectedFilter_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>
                    <Label Grid.Column="1" Content="{Binding Path=tittlefieldName}"/>
                    <ComboBox Grid.Column="2" IsReadOnly="True" IsEditable="True" Text="{Binding Path=comparison, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem Content="="/>
                        <ComboBoxItem Content="&lt;"/>
                        <ComboBoxItem Content=">"/>
                        <ComboBoxItem Content="&lt;="/>
                        <ComboBoxItem Content=">="/>
                    </ComboBox>
                    <customControl:DatePickerCustom Grid.Column="3" FontSize="14" Text="{Binding Path=value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="forFilters:FilterDescription" x:Key="intFilterTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btDeleteSelectedFilter" Grid.Column="0" Height="27" Width="{Binding ElementName=btDeleteSelectedFilter, Path=ActualHeight}"
                            Click="btDeleteSelectedFilter_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>
                    <Label Grid.Column="1" Content="{Binding Path=tittlefieldName}"/>
                    <ComboBox Grid.Column="2" IsReadOnly="True" IsEditable="True" Text="{Binding Path=comparison, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem Content="="/>
                        <ComboBoxItem Content="&lt;"/>
                        <ComboBoxItem Content=">"/>
                        <ComboBoxItem Content="&lt;="/>
                        <ComboBoxItem Content=">="/>
                    </ComboBox>
                    <TextBox Grid.Column="3" FontSize="14" Text="{Binding Path=value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </DataTemplate>

        </customControl:FilterDataTemplateDictionary>
    </ListView.Resources>

    <ListView.ItemContainerStyle>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ListView.ItemContainerStyle>

    <ListView.ItemTemplateSelector>
        <customControl:TemplateSelectorExt TemplateDictionary="{StaticResource filterDataTemplateDictionary}">

        </customControl:TemplateSelectorExt>
    </ListView.ItemTemplateSelector>
</ListView>
