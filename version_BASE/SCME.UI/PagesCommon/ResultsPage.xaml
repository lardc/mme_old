<Page x:Class="SCME.UI.PagesCommon.ResultsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:customControl="clr-namespace:SCME.UI.CustomControl"
      xmlns:res="clr-namespace:SCME.UI.Properties"
      mc:Ignorable="d" d:DesignWidth="1458.178" d:DesignHeight="894.93"
      Name="resultsPage" Title="{x:Static res:Resources.Results}"
      Loaded="ResultsPage_OnLoaded">

    <Page.Resources>

        <Style TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize22}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CButtonStyle}"/>

        <Style x:Key="PlaceholderTextBox" TargetType="{x:Type customControl:ValidatingTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type customControl:ValidatingTextBox}">
                        <Grid>
                            <customControl:ValidatingTextBox
                                Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                x:Name="textSource"
                                Background="Transparent"
                                Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}"
                                     Panel.ZIndex="1" Padding="10, 5, 10, 0" FontSize="25">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, ElementName=textSource}" Value="">
                                                <Setter Property="Foreground" Value="LightGray" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsFocused, ElementName=textSource}" Value="True">
                                                <Setter Property="Foreground" Value="Transparent" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="75*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="90*" />
            <RowDefinition Height="10*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30*" />
                <ColumnDefinition Width="70*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Background="{StaticResource xPurple1}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80" />
                    <RowDefinition Height="60" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="{x:Static res:Resources.GroupList}" FontSize="36" Margin="20, 10" Foreground="{StaticResource xWhite1}" HorizontalAlignment="Left"/>
                <Label Grid.Row="1" Grid.Column="0" Content="{x:Static res:Resources.Period}" FontSize="28" Margin="23, 10" Foreground="{StaticResource xWhite1}" HorizontalAlignment="Left"/>

                <ComboBox x:Name="cbPeriod" Grid.Column="1" Grid.Row="1" Padding="10" Margin="10, 8" MaxDropDownHeight="1000"
                                  Style="{StaticResource CComboboxStyle}" HorizontalContentAlignment="Right" SelectionChanged="CbPeriod_OnSelectionChanged">
                    <ComboBoxItem IsSelected="True" Content="{x:Static res:Resources.Today}"/>
                    <ComboBoxItem Content="{x:Static res:Resources.Yesterday}"/>
                    <ComboBoxItem Content="{x:Static res:Resources.Last7Days}"/>
                    <ComboBoxItem Content="{x:Static res:Resources.LastMonth}"/>
                </ComboBox>

                <customControl:SimpleListBox x:Name="lbGroupList" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" 
                                             Margin="0, 10, 0, 0"
                                             Padding="0, 10, 0, 10"
                                             BorderBrush="{StaticResource xWhite1}"
                                             BorderThickness="0, 2, 0, 0"
                                             ItemsSource="{Binding ElementName=resultsPage, Path=GroupCollection}" SelectionChanged="LbGroupList_SelectionChanged"/>
            </Grid>

            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*" />
                    <ColumnDefinition Width="20*" />
                    <ColumnDefinition Width="30*" />
                    <ColumnDefinition Width="30*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30*" />
                    <RowDefinition Height="30*" />
                    <RowDefinition Height="30*" />
                    <RowDefinition Height="30*" />
                    <RowDefinition Height="30*" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="{x:Static res:Resources.PrintingOptions}" FontSize="40"
                       Margin="20, 10" Foreground="{StaticResource xBlue2}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                <Label x:Name="lblGroup"  Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Content="{Binding ElementName=lbGroupList, Path=SelectedItem}" FontSize="32"
                       Margin="20, 10, 0, 15" Foreground="{StaticResource xBlack1}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                <StackPanel Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Margin="20"
                            Orientation="Horizontal" HorizontalAlignment="Center">
                    <ToggleButton x:Name="tgbAll" Style="{StaticResource CToggleButtonStyle}" Content="{x:Static res:Resources.All}" Padding="80, 20, 80, 20" Margin="15, 0, 15, 0" IsChecked="True" Checked="TgbAll_Cheched"/>
                    <ToggleButton x:Name="tgbPassed" Style="{StaticResource CToggleButtonStyle}" Content="{x:Static res:Resources.Passed}" Padding="80, 20, 80, 20" Margin="15, 0, 15, 0" IsChecked="False" Checked="TgbPassed_Checked"/>
                    <ToggleButton x:Name="tgbRejected" Style="{StaticResource CToggleButtonStyle}" Content="{x:Static res:Resources.Rejected}" Padding="80, 20, 80, 20" Margin="15, 0, 15, 0" IsChecked="False" Checked="TgbRejected_Checked"/>
                </StackPanel>

                <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5*" />
                        <RowDefinition Height="60" />
                        <RowDefinition Height="60" />
                        <RowDefinition Height="5*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10*" />
                        <ColumnDefinition Width="30*" />
                        <ColumnDefinition Width="70*" />
                        <ColumnDefinition Width="30*" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="1" Grid.Column="1" Content="{x:Static res:Resources.Customer}" FontSize="28" Margin="23, 10" Foreground="{StaticResource xBlue2}" HorizontalAlignment="Left"/>
                    <Label Grid.Row="2" Grid.Column="1" Content="{x:Static res:Resources.Device}" FontSize="28" Margin="23, 10" Foreground="{StaticResource xBlue2}" HorizontalAlignment="Left"/>

                    <customControl:ValidatingTextBox Grid.Row="1" Grid.Column="2" Margin="10, 8"
                         FontSize="32" Style="{StaticResource PlaceholderTextBox}" Tag="Proton" IsNumeric="False" 
                         Text="{Binding ElementName=resultsPage, Path=FieldCustomer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <customControl:ValidatingTextBox Grid.Row="2" Grid.Column="2" Margin="10, 8"
                         FontSize="32" Style="{StaticResource PlaceholderTextBox}" Tag="MTT-X" IsNumeric="False"
                         Text="{Binding ElementName=resultsPage, Path=FieldDeviceType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>

                <Button Grid.Row="3" Grid.Column="0"  Click="Print_Click" Margin="30,50,10,10"
                        Content="{x:Static res:Resources.Print}" FontSize="36" Background="{StaticResource xBlue2}"/>
                <Label x:Name="lblStatus" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Content="{x:Static res:Resources.Waiting}" 
                       FontSize="28" Margin="40, 40, 0, 10" Foreground="{StaticResource xBlue4}"
                       HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
            </Grid>
        </Grid>

        <Button Grid.Column="0" Grid.Row="1" Click="Back_Click" 
                Content="{x:Static res:Resources.Back}" />
    </Grid>

</Page>