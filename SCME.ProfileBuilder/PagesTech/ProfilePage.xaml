<Page x:Class="SCME.ProfileBuilder.PagesTech.ProfilePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ui="clr-namespace:SCME.ProfileBuilder"
      xmlns:res="clr-namespace:SCME.ProfileBuilder.Properties"
      xmlns:customControl="clr-namespace:SCME.ProfileBuilder.CustomControl"
      xmlns:profiles="clr-namespace:SCME.Types.Profiles;assembly=SCME.Types"
      mc:Ignorable="d" d:DesignWidth="1280" d:DesignHeight="924"  
      x:Name="profilePage" Title="{x:Static res:Resources.Profile}">

    <Page.Resources>
        <ui:BooleanToVisibilityConverter x:Key="B2V" />
        <ui:VtmTestTypeToVisibilityConverter x:Key="VT2V" />
        <ui:DvdtTestTypeToVisibilityConverter x:Key="DT2V" />
        <ui:DvdtTestTypeToVisibilityUnConverter x:Key="DT2VB" />
        <ui:BvtTestTypeToVisibilityConverter x:Key="TT2V" />
        <ui:TreeViewSelectedItemToVisibleConverter x:Key="TVSI2V" />
        <ui:EnumValueToString x:Key="E2S" />
        <ui:TDcFallRateValueFromEnum x:Key="TDcFallRateVFE" />
        <ui:TOsvRateValueFromEnum x:Key="TOsvRateVFE" />
        <ui:FrequencyDivisorToFrequency x:Key="FD2F" />

        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource CLabelStyle}">
            <Setter Property="Foreground" Value="{StaticResource xWhite1}" />
        </Style>

        <Style x:Key="PlaceholderTextBox" TargetType="{x:Type customControl:ValidatingTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type customControl:ValidatingTextBox}">
                        <Grid>
                            <customControl:ValidatingTextBox
                                           Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           x:Name="textSource"
                                           Background="Transparent"
                                           Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}"
                                     Panel.ZIndex="1" Padding="10, 10, 10, 0" FontSize="24" FontStyle="Italic"
                                     VerticalContentAlignment="Center">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, ElementName=textSource}" Value="">
                                                <Setter Property="Foreground" Value="LightGray" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsFocused, ElementName=textSource}" Value="True">
                                                <Setter Property="Foreground" Value="Transparent" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type customControl:ValidatingTextBox}">
            <Setter Property="FontSize" Value="{StaticResource FontSize20}" />
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="TabStripPlacement" Value="Top" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="True" SnapsToDevicePixels="True">
                            <Grid Name="ContentPanel">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                                      ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                      ContentSource="SelectedContent"
                                                      Name="PART_SelectedContentHost"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="true"/>
                                </Border>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CButtonStyle}" />

        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CCheckBoxStyle}" />

        <Style TargetType="{x:Type Path}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Data" Value="M 0 1.5 L 1.5 3 L 3 0" />
            <Setter Property="StrokeThickness" Value="1.5" />
            <Setter Property="Stroke" Value="{StaticResource xWhite1}" />
            <Setter Property="Stretch" Value="Uniform" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                    <Setter Property="Data" Value="M 0 0 L 3 3 M 0 3 L 3 0"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Name="mainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="33*" />
            <ColumnDefinition Width="77*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*" />
            <RowDefinition Height="80*" />
            <RowDefinition Height="10*" />
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="80*" />
            </Grid.RowDefinitions>

            <customControl:ValidatingTextBox Grid.Row="1" IsNumeric="False" IsFloat="False" Text="" x:Name="FilterTextBox" TextChanged="FilterTextBox_OnTextChanged" Style="{StaticResource PlaceholderTextBox}" Tag="Поиск"/>
            <TreeView x:Name="treeViewProfiles" Grid.Row="2" SelectedItemChanged="TreeViewProfiles_OnSelectedItemChanged">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="profiles:Profile" ItemsSource="{Binding Path=ChilProfiles}">
                        <TextBlock FontSize="28" Text="{Binding Path=Name}">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static res:Resources.Delete}" Click="MenuItem_OnClick"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <TextBlock FontSize="20" Text="{Binding Path=TimeStampFormated}"/>
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <Button Grid.Column="0" Grid.Row="0" x:Name="btnAdd" Content="{x:Static res:Resources.Add}" Background="{StaticResource xPurple1}" Click="Add_Click" Margin="0,0,1,1" />
        </Grid>

        <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Background="{StaticResource xPurple1}" Margin="0,0,0,0" />
        <Label Grid.Column="1" Grid.Row="0" FontSize="36" Margin="20,0,0,0" Visibility="{Binding SelectedItem, Converter={StaticResource TVSI2V}, ElementName=treeViewProfiles}" Content="{x:Static res:Resources.ProfileName}" />

        <customControl:ValidatingTextBox x:Name="tbProfileName" Grid.Column="1" Grid.Row="0" KeyUp="TbProfileName_OnKeyUp"
                       Visibility="{Binding SelectedItem, Converter={StaticResource TVSI2V}, ElementName=treeViewProfiles}"
                       FontSize="36" Margin="300,16,100,16"
                       GotKeyboardFocus="TbProfileName_GotKeyboardFocus"
                       LostKeyboardFocus="TbProfileName_LostKeyboardFocus"
                       Text="{Binding SelectedItem.Name, ElementName=treeViewProfiles}"
                       IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"/>

        <TabControl x:Name="tabControl" Grid.Column="1" Background="Transparent" SelectionChanged="tabControl_SelectionChanged" 
                    Visibility="{Binding SelectedItem, Converter={StaticResource TVSI2V}, ElementName=treeViewProfiles}"
                    Margin="3,83,-3,9" Grid.RowSpan="2" DataContext="{Binding ElementName=profilePage}">

            <TabItem IsSelected="True">
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                            <RowDefinition Height="60*"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="280*" />
                                <ColumnDefinition Width="200*" />
                                <ColumnDefinition Width="30*" />
                                <ColumnDefinition Width="150*" />
                                <ColumnDefinition Width="230*" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Grid.Row="0" FontSize="30" Margin="10, 10, 0, 10" Content="{x:Static res:Resources.CommutationTypeT}" Height="Auto" />
                            <ComboBox Grid.Column="1" Grid.Row="0" Padding="10" Margin="10" MaxDropDownHeight="1000"
                                      ItemsSource="{Binding Source={StaticResource DataFromCommutationModeEnum}}"
                                      SelectedItem="{Binding SelectedItem.ParametersComm, Converter={StaticResource E2S}, ElementName=treeViewProfiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource CComboboxStyle}" HorizontalContentAlignment="Right"
                                      IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"/>

                            <Label Grid.Column="3" Grid.Row="0" FontSize="30" Margin="10, 10, 0, 10" Content="{x:Static res:Resources.Force}" Height="Auto" />
                            <customControl:ValidatingTextBox Grid.Column="4" Grid.Row="0" Margin="10,10,90,10" Padding="5"
                                           TextBlock.TextAlignment="Right" Maximum="50" Minimum="5"
                                           IsNumeric="True" IsFloat="True"
                                           Text="{Binding SelectedItem.ParametersClamp, ElementName=treeViewProfiles}"
                                           IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"/>
                        </Grid>
                        <Grid Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="280*" />
                                <ColumnDefinition Width="200*" />
                                <ColumnDefinition Width="30*" />
                                <ColumnDefinition Width="230*" />
                                <ColumnDefinition Width="150*" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" FontSize="30" Margin="10, 10, 0, 10" Content="{x:Static res:Resources.ParameterType}" Height="Auto" />
                            <ComboBox Grid.Column="1" x:Name="ComboBoxParametersType" Padding="10" Margin="10" MaxDropDownHeight="1000"
                                      Style="{StaticResource CComboboxStyle}" HorizontalContentAlignment="Right"
                                      IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}">
                                <ComboBoxItem Content="Gate"/>
                                <ComboBoxItem Content="SL"/>
                                <ComboBoxItem Content="BVT"/>
                                <ComboBoxItem Content="dVdt"/>
                                <ComboBoxItem Content="ATU"/>
                                <ComboBoxItem Content="QrrTq"/>
                                <ComboBoxItem Content="RAC"/>
                            </ComboBox>

                            <Button Grid.Column="3" Margin="10" x:Name="ButtonAddTestParameters" Content="{x:Static res:Resources.Add}" Click="ButtonAddTestParameters_OnClick"
                                IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"
                                ></Button>
                            <!--SelectedItem="{Binding SelectedItem.ParametersComm, Converter={StaticResource E2S}, ElementName=treeViewProfiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                        </Grid>
                        <Grid Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="280*" />
                                <ColumnDefinition Width="200*" />
                                <ColumnDefinition Width="30*" />
                                <ColumnDefinition Width="150*" />
                                <ColumnDefinition Width="230*" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" FontSize="30" Margin="10, 10, 0, 10" Content="{x:Static res:Resources.Height_Prof}" Height="Auto"/>
                            <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="0" Margin="10,10,10,10" Padding="5" TextBlock.TextAlignment="Right" IsNumeric="True" Maximum="100000" Minimum="0"
                                           Text="{Binding SelectedItem.Height, ElementName=treeViewProfiles}" IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"/>

                            <Label Grid.Column="3" FontSize="30" Margin="10, 10, 0, 10" Content="{x:Static res:Resources.Temp}" Height="Auto"/>
                            <customControl:ValidatingTextBox Grid.Column="4" Grid.Row="0" Margin="10,10,90,10" Padding="5" TextBlock.TextAlignment="Right" IsNumeric="True" Maximum="200" Minimum="0" 
                                           Text="{Binding SelectedItem.Temperature, ElementName=treeViewProfiles}" IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"/>
                        </Grid>

                        <customControl:ListBoxTestParameters Margin="10" Grid.Row="3" x:Name="TestParameters" IsParent="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"
                                       ItemsSource="{Binding SelectedItem.TestParametersAndNormatives, ElementName=treeViewProfiles}" 
                                       IsButtonDeleteVisible="True" MouseDoubleClick="TestParameters_OnMouseDoubleClick"/>

                        <Grid Row="4" Visibility="{Binding IsHeighMeasureEnable, Converter={StaticResource B2V}, Source={x:Static res:Settings.Default}}" Margin="16,0,85,10" Background="{StaticResource xPurple2}">
                            <Border BorderBrush="{StaticResource xWhite1}" BorderThickness="1"/>
                            <CheckBox x:Name="cbIsHeigtMeasureEnabled" x:FieldModifier="private" IsEnabled="{Binding SelectedItem.IsParent, ElementName=treeViewProfiles}"
                    		          IsChecked="{Binding SelectedItem.IsHeightMeasureEnabled, ElementName=treeViewProfiles, UpdateSourceTrigger=PropertyChanged}"
                    	     	      HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="30"
                    		          Margin="10" Padding="2" Content="{x:Static res:Resources.MeasureDialog_Title}"/>
                        </Grid>
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Margin="50,30" Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.Gate}" />

                        <CheckBox Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                                  Content="{x:Static res:Resources.PureVgt}" Margin="100,5,0,5"
                                  IsChecked="{Binding Path=SelectedItem.IsCurrentEnabled, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2"
                                  Content="{x:Static res:Resources.HoldingCurrent}" Margin="100,5,0,5"
                                  IsChecked="{Binding SelectedItem.IsIhEnabled, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"
                                  Content="{x:Static res:Resources.HoldingStrikeCurrent}" Margin="100,5,0,5"
                                  IsChecked="{Binding SelectedItem.IsIhStrikeCurrentEnabled, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2"
                                  Content="{x:Static res:Resources.LatchingCurrent}" Margin="100,5,0,5"
                                  IsChecked="{Binding SelectedItem.IsIlEnabled, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="5" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxResistance_Ohm}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="5" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="100" Minimum="0"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.Resistance, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsFloat="True" />

                        <Label Grid.Column="0" Grid.Row="6" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxIgt_mA}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="6" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="5000" Minimum="0"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.IGT, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="7" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxVgt_V}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="7" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="5" Minimum="0"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VGT, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsFloat="True" />

                        <Label Grid.Column="0" Grid.Row="8" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxIh_mA}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="8" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="2000" Minimum="0"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.IH, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="9" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxIl_mA}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="9" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="2000" Minimum="0"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.IL, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Margin="50,30" Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.Vtm}" />

                        <Label Grid.Column="0" Grid.Row="1" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.TestType}" />
                        <ComboBox Grid.Column="2" Grid.Row="1" Padding="5" Margin="10"
                                  ItemsSource="{Binding Source={StaticResource DataFromTestVtmTypeEnum}}"
                                  SelectedItem="{Binding SelectedItem.TestType, Converter={StaticResource E2S}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource CComboboxStyle}" />

                        <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4" Grid.RowSpan="5"
                          Visibility="{Binding SelectedItem.TestType, ConverterParameter=0, Converter={StaticResource VT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0" Grid.Row="0" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Current_A}" />
                            <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="0" Margin="10"
                                           TextBlock.TextAlignment="Right" Maximum="{StaticResource MaxITM}" Minimum="300"
                                           IsNumeric="True"
                                           Text="{Binding SelectedItem.RampCurrent, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                            <Label Grid.Column="0" Grid.Row="1" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Time_us}" />
                            <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="1" Margin="10"
                                           TextBlock.TextAlignment="Right" Maximum="10000" Minimum="200"
                                           IsNumeric="True"
                                           Text="{Binding SelectedItem.RampTime, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                            <CheckBox Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                                      Content="{x:Static res:Resources.IsHeatEnabled}" Margin="50,5"
                                      IsChecked="{Binding SelectedItem.IsRampOpeningEnabled, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                            <Label Grid.Column="0" Grid.Row="3" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.HeatCurrent_A}" IsEnabled="{Binding IsChecked, ElementName=cbIsHeatEnabled}" Visibility="{Binding SelectedItem.IsRampOpeningEnabled, Converter={StaticResource B2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                            <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="3" Margin="10"
                                           TextBlock.TextAlignment="Right" Maximum="1000" Minimum="100"
                                           IsNumeric="True"
                                           Text="{Binding SelectedItem.RampOpeningCurrent, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}"
                                           Visibility="{Binding SelectedItem.IsRampOpeningEnabled, Converter={StaticResource B2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                            <Label Grid.Column="0" Grid.Row="4" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.HeatTime_us}" IsEnabled="{Binding IsChecked, ElementName=cbIsHeatEnabled}" Visibility="{Binding SelectedItem.IsRampOpeningEnabled, Converter={StaticResource B2V}, ElementName=TestParameters}" />
                            <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="4" Margin="12"
                                           TextBlock.TextAlignment="Right" Maximum="5000" Minimum="50"
                                           IsNumeric="True"
                                           Visibility="{Binding SelectedItem.IsRampOpeningEnabled, Converter={StaticResource B2V}, ElementName=TestParameters}"
                                           Text="{Binding SelectedItem.RampOpeningTime, ElementName=TestParameters}" />
                        </Grid>

                        <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4" Grid.RowSpan="5" Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource VT2V}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Current_A}" />
                                <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="0" Margin="10"
                                               TextBlock.TextAlignment="Right" Maximum="{StaticResource MaxITM}" Minimum="300"
                                               IsNumeric="True"
                                               Text="{Binding SelectedItem.SinusCurrent, ElementName=TestParameters}" />

                                <Label Grid.Column="0" Grid.Row="1" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Time_us}" />
                                <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="1" Margin="10"
                                               TextBlock.TextAlignment="Right" Maximum="15000" Minimum="4000"
                                               IsNumeric="True"
                                               Text="{Binding SelectedItem.SinusTime, ElementName=TestParameters}" />
                            </Grid>
                        </Grid>

                        <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4" Grid.RowSpan="5" Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource VT2V}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Current_A}" />
                                <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="0" Margin="10"
                                               TextBlock.TextAlignment="Right" Maximum="{StaticResource MaxITM}" Minimum="300"
                                               IsNumeric="True"
                                               Text="{Binding SelectedItem.CurveCurrent, ElementName=TestParameters}" />

                                <Label Grid.Column="0" Grid.Row="1" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Time_us}" />
                                <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="1" Margin="10"
                                               TextBlock.TextAlignment="Right" Maximum="12000" Minimum="2500"
                                               IsNumeric="True"
                                               Text="{Binding SelectedItem.CurveTime, ElementName=TestParameters}" />

                                <Label Grid.Column="0" Grid.Row="3" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.CurveFactor}" />
                                <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="3" Margin="10"
                                               TextBlock.TextAlignment="Right" Maximum="100" Minimum="1"
                                               IsNumeric="True"
                                               Text="{Binding SelectedItem.CurveFactor, ElementName=TestParameters}" />

                                <Label Grid.Column="0" Grid.Row="4" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.AdditionalTime_us}" />
                                <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="4" Margin="10"
                                               TextBlock.TextAlignment="Right" Maximum="5000" Minimum="0"
                                               IsNumeric="True"
                                               Text="{Binding SelectedItem.CurveAddTime, ElementName=TestParameters}" />
                            </Grid>
                        </Grid>

                        <CheckBox Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="2"
                                  Content="{x:Static res:Resources.UseFullScale}" Margin="30,5"
                                  HorizontalAlignment="Right"
                                  IsChecked="{Binding SelectedItem.UseFullScale,ElementName=TestParameters}" />
                        <CheckBox Grid.Column="2" Grid.Row="7" Grid.ColumnSpan="2"
                                  Content="{x:Static res:Resources.UseLsqMethod}" Margin="20,5"
                                  IsChecked="{Binding SelectedItem.UseLsqMethod, ElementName=TestParameters}" />

                        <Label Grid.Column="0" Grid.Row="8" Margin="10"
                               Grid.ColumnSpan="2" HorizontalAlignment="Right"
                               Content="{x:Static res:Resources.MaxVtm_V}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="8" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="9.99" Minimum="0.1"
                                       IsNumeric="True" 
                                       Text="{Binding SelectedItem.VTM, ElementName=TestParameters}"
                                       IsFloat="True" />

                        <Label Grid.Column="0" Grid.Row="9" Margin="10" Grid.ColumnSpan="2" HorizontalAlignment="Right" Content="{x:Static res:Resources.Count}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="9" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="100" Minimum="1"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.Count, ElementName=TestParameters}" />
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Margin="50,30" Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.Bvt}" />

                        <Label Grid.Column="1" Grid.Row="1" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.TestType}" />
                        <ComboBox Grid.Column="2" Grid.Row="1" Padding="5" Margin="10"
                                  ItemsSource="{Binding Source={StaticResource DataFromTestBvtTypeEnum}}"
                                  SelectedItem="{Binding SelectedItem.TestType, Converter={StaticResource E2S}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource CComboboxStyle}" />

                        <Label Grid.Column="0" Grid.Row="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.CurrentLimit_mA}" />
                        <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="2" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="{StaticResource MaxIxRM}" Minimum="0.5" IsFloat="True"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.CurrentLimit, ElementName=TestParameters}" />

                        <Label Grid.Column="2" Grid.Row="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.PlateTime_ms}" />
                        <customControl:ValidatingTextBox Grid.Column="3" Grid.Row="2" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="10000" Minimum="100"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.PlateTime, ElementName=TestParameters}" />

                        <Label Grid.Column="0" Grid.Row="3" Margin="10" HorizontalAlignment="Right" Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" Content="{x:Static res:Resources.VoltageLimitD_V}" />
                        <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="3" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="9000" Minimum="300"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VoltageLimitD, ElementName=TestParameters}"
                                       Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="2" Grid.Row="3" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.VoltageLimitR_V}" Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="3" Grid.Row="3" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="9000" Minimum="300"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VoltageLimitR, ElementName=TestParameters}"
                                       Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="4" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.Rampup_Vms}" />
                        <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="4" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="5" Minimum="0.5"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.RampUpVoltage, ElementName=TestParameters}"
                                       IsFloat="True" />

                        <Label Grid.Column="2" Grid.Row="4" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.StartVoltage_V}" />
                        <customControl:ValidatingTextBox Grid.Column="3" Grid.Row="4" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="1500" Minimum="300"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.StartVoltage, ElementName=TestParameters}" />

                        <Label Grid.Column="0" Grid.Row="5" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.Frequency_Hz}" />
                        <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="5" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="60" Minimum="40"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VoltageFrequency, ElementName=TestParameters}" />

                        <Label Grid.Column="2" Grid.Row="5" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.FreqRate_Hz}" />
                        <ComboBox x:Name="cbFreqDivisor" Grid.Column="3" Grid.Row="5" Margin="10"
                                  ItemsSource="{Binding Source={StaticResource DataFromFreqRateEnum}}"
                                  SelectedItem="{Binding SelectedItem.FrequencyDivisor, Converter={StaticResource FD2F}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Padding="5" Style="{StaticResource CComboboxStyle}" />

                        <Label Grid.Column="0" Grid.Row="6" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.Mode}" />
                        <ComboBox Grid.Column="1" Grid.Row="6" Margin="10" Padding="5"
                                 ItemsSource="{Binding Source={StaticResource DataFromMeasurementModeEnum}}"
                                 SelectedItem="{Binding SelectedItem.MeasurementMode, Converter={StaticResource E2S}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource CComboboxStyle}" />

                        <Label Grid.Column="2" Grid.Row="6" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.UseUdsmUrsm}"/>
                        <CheckBox x:Name="chbUseUdsmUrsm" Grid.Column="3" Grid.Row="6" Margin="4" IsChecked="{Binding SelectedItem.UseUdsmUrsm, ElementName=TestParameters}"/>

                        <Label Grid.Column="0" Grid.Row="8" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.MinVdrm_V}" Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="8" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="9000" Minimum="400"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VDRM, ElementName=TestParameters}"
                                       Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="2" Grid.Row="8" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.MinVrrm_V}" Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="3" Grid.Row="8" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="9000" Minimum="400"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VRRM, ElementName=TestParameters}"
                                       Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="9" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxIdrm_mA}" Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="1" Grid.Row="9" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="300" Minimum="0.4"
                                       IsNumeric="True" IsFloat="True"
                                       Text="{Binding SelectedItem.IDRM, ElementName=TestParameters}"
                                       Visibility="{Binding SelectedItem.TestType, ConverterParameter=1, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="2" Grid.Row="9" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.MaxIrrm_mA}" Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="3" Grid.Row="9" Margin="10" TextBlock.TextAlignment="Right"
                                       Maximum="300" Minimum="0.4"
                                       IsNumeric="True" IsFloat="True"
                                       Text="{Binding SelectedItem.IRRM, ElementName=TestParameters}"
                                       Visibility="{Binding SelectedItem.TestType, ConverterParameter=2, Converter={StaticResource TT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Margin="50,30" Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.dVdt}" />

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.Mode}" />
                        <ComboBox Grid.Column="2" Grid.Row="1" Padding="5" Margin="10"
	                             ItemsSource="{Binding Source={StaticResource DataFromTestdVdtTypeEnum}}"
	                             SelectedItem="{Binding SelectedItem.Mode, Converter={StaticResource E2S}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
	                             Style="{StaticResource CComboboxStyle}" />

                        <Label Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.DvDtVoltage}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="2" Padding="5" Margin="10"
	                                   TextBlock.TextAlignment="Right" Maximum="10000" Minimum="0"
	                                   IsNumeric="True"
	                                   Text="{Binding SelectedItem.Voltage, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.DvdtVoltageRate}" Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2V}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <ComboBox Grid.Column="2" Grid.Row="3" Padding="5" Margin="10"
	                              ItemsSource="{Binding Source={StaticResource DataFromTestdVdtVoltageRateEnum}}"
	                              SelectedItem="{Binding SelectedItem.VoltageRate, Converter={StaticResource E2S}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
	                              Style="{StaticResource CComboboxStyle}"
	                              Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2V}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.DvdtConfirmationCount}" Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2V}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="4" Padding="5" Margin="10"
                                       TextBlock.TextAlignment="Right" Maximum="100" Minimum="1"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.ConfirmationCount, ElementName=TestParameters}" 
                                       Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2V}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.DvdtVoltageRateLimit}" Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2VB}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="3" Padding="5" Margin="10"
                                       TextBlock.TextAlignment="Right" Maximum="2500" Minimum="500"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VoltageRateLimit, ElementName=TestParameters}" 
                                       Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2VB}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Right" Content="{x:Static res:Resources.DvdtVoltageRateOffSet}" Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2VB}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="4" Padding="5" Margin="10"
                                       TextBlock.TextAlignment="Right" Maximum="2000" Minimum="50"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.VoltageRateOffSet, ElementName=TestParameters}" 
                                       Visibility="{Binding SelectedItem.Mode, Converter={StaticResource DT2VB}, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Width="600" Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*" />
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="25*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.Atu}" />

                        <Label Grid.Column="0" Grid.Row="1" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.AtuPrePulseValue}" />
                        <customControl:ValidatingTextBox Grid.Column="2" Grid.Row="1" Padding="5" Margin="10"
                                       TextBlock.TextAlignment="Right" Minimum="15" Maximum="250"
                                       IsNumeric="True"
                                       Text="{Binding SelectedItem.PrePulseValue, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Column="0" Grid.Row="2" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{x:Static res:Resources.AtuPowerValueSet}" />
                        <customControl:ValidatingTextBox Grid.Column="2" VerticalAlignment="Top" Grid.Row="2" Padding="5" Margin="10"
                                       TextBlock.TextAlignment="Right" Minimum="2" Maximum="30"
                                       IsFloat="True"
                                       Text="{Binding SelectedItem.PowerValue, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*" />
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="25*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.QrrTq}" />

                        <Label Grid.Column="0" Grid.Row="1" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqMode}"/>
                        <ComboBox Grid.Column="2" Grid.Row="1" Padding="5" Margin="10"
                                  ItemsSource="{Binding Source={StaticResource NamesFromQrrTqModeEnum}}"
                                  SelectedItem="{Binding SelectedItem.Mode, Converter={StaticResource E2S}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource CComboboxStyle}"/>

                        <Label Grid.Column="0" Grid.Row="2" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqTrrMeasureBy9050Method}"/>
                        <CheckBox Grid.Column="2" Grid.Row="2" Content="" IsChecked="{Binding SelectedItem.TrrMeasureBy9050Method, ElementName=TestParameters}" Padding="0"/>

                        <Label Grid.Column="0" Grid.Row="3" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqDirectCurrent}"/>
                        <customControl:ValidatingTextBox x:Name="lbDirectCurrent" Grid.Column="2" Grid.Row="3" Padding="5" Margin="10" TextBlock.TextAlignment="Right" IsNumeric="True" Minimum="50" Maximum="500" Text="{Binding SelectedItem.DirectCurrent, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="4" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqDCPulseWidth}"/>
                        <customControl:ValidatingTextBox x:Name="lbDCPulseWidth" Grid.Column="2" Grid.Row="4" Padding="5" Margin="10" TextBlock.TextAlignment="Right" IsNumeric="True" Minimum="500" Maximum="5000" Text="{Binding SelectedItem.DCPulseWidth, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="5" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqDCRiseRate}"/>
                        <customControl:ValidatingTextBox x:Name="lbDCRiseRate" Grid.Column="2" Grid.Row="5" Padding="5" Margin="10" TextBlock.TextAlignment="Right" IsNumeric="True" IsFloat="True" Minimum="0.2" Maximum="5" Text="{Binding SelectedItem.DCRiseRate, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="6" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqDCFallRate}"/>
                        <ComboBox Grid.Column="2" Grid.Row="6" Padding="5" Margin="10"
                                  ItemsSource="{Binding Source={StaticResource DataFromQrrTqDcFallRateEnum}}"
                                  SelectedItem="{Binding SelectedItem.DCFallRate, Converter={StaticResource TDcFallRateVFE}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource CComboboxStyle}"/>

                        <Label Grid.Column="0" Grid.Row="7" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqOffStateVoltage}"/>
                        <customControl:ValidatingTextBox x:Name="lbOffStateVoltage" Grid.Column="2" Grid.Row="7" Padding="5" Margin="10" TextBlock.TextAlignment="Right" IsNumeric="True" Minimum="400" Maximum="1900" Text="{Binding SelectedItem.OffStateVoltage, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="8" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.QrrTqOsvRate}"/>
                        <ComboBox Grid.Column="2" Grid.Row="8" Padding="5" Margin="10"
                                  ItemsSource="{Binding Source={StaticResource DataFromQrrTqOsvRateEnum}}"
                                  SelectedItem="{Binding SelectedItem.OsvRate, Converter={StaticResource TOsvRateVFE}, ElementName=TestParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource CComboboxStyle}"/>
                    </Grid>
                </Viewbox>
            </TabItem>

            <TabItem>
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                    <Grid Height="640">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*" />
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="25*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" FontSize="32" HorizontalAlignment="Center" Content="{x:Static res:Resources.RAC}" />

                        <Label Grid.Column="0" Grid.Row="1" Margin="10" HorizontalAlignment="Left" Content="{x:Static res:Resources.RACResVoltage}"/>
                        <customControl:ValidatingTextBox x:Name="lbResVoltage" Grid.Column="2" Grid.Row="1" Padding="5" Margin="10" TextBlock.TextAlignment="Right" IsNumeric="True" Minimum="1000" Maximum="2500" Text="{Binding SelectedItem.ResVoltage, ElementName=TestParameters, UpdateSourceTrigger=PropertyChanged}"/>

                    </Grid>
                </Viewbox>
            </TabItem>

        </TabControl>

        <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" x:Name="ButtonBack" Content="{x:Static res:Resources.Back}" Click="Back_Click" Margin="0,1,1,0" />
            <Button Grid.Column="2"  x:Name="ButtonProfles" Content="{x:Static res:Resources.MME_Profiles}" Click="ButtonProfles_OnClick" Margin="0,1,1,0" />
            <Button Grid.Column="4" Content="{x:Static res:Resources.Save}" Click="ButtonOk_OnClick"  Margin="0,1,1,0"  x:Name="ButtonOk"/>
        </Grid>
    </Grid>
</Page>